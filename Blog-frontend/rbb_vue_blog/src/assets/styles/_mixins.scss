// src/assets/styles/_mixins.scss

@import './variables';

// 响应式网格布局混合
@mixin responsive-grid($min-width: 200px, $gap: 16px) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;
}

// 响应式断点混合
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: #{$breakpoint-xs - 1}) { @content; }
  }
  @else if $breakpoint == sm {
    @media (min-width: $breakpoint-xs) and (max-width: #{$breakpoint-sm - 1}) { @content; }
  }
  @else if $breakpoint == md {
    @media (min-width: $breakpoint-sm) and (max-width: #{$breakpoint-md - 1}) { @content; }
  }
  @else if $breakpoint == lg {
    @media (min-width: $breakpoint-md) and (max-width: #{$breakpoint-lg - 1}) { @content; }
  }
  @else if $breakpoint == xl {
    @media (min-width: $breakpoint-lg) and (max-width: #{$breakpoint-xl - 1}) { @content; }
  }
  @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xl) { @content; }
  }
}

// 卡片样式混合
@mixin card-style {
  background: rgba(255, 255, 255, 0.02);
  border: 1px solid $border-color;
  border-radius: 12px;
  transition: all 0.3s ease;

  &:hover {
    border-color: $primary-color;
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba($primary-color, 0.2);
  }
}

// 卡片内容padding混合
@mixin card-padding {
  padding: 25px;
  
  @media (max-width: $breakpoint-md) {
    padding: 20px;
  }

  @media (max-width: $breakpoint-sm) {
    padding: 15px;
  }
}
